% Assuming WE_null_normal and two_sample_estimator are already defined in MATLAB
city_sizes = [100,200,400,600];
rhosizes = 1;
alphasizes = [1.2,1.75,2.5];
%city_sizes = [25,500];
%rhosizes = [0.1,1];
replication = 100; 
 % Number of replications
parm=16;
% Preallocate matrices for test statistics
test_stat_1 = zeros(replication* length(city_sizes) * length(rhosizes)*length(alphasizes),parm);
r=3;
coln = 0;
rng(68); % For reproducibility, equivalent to set.seed in R

parpool; % Start the parallel pool

for alpha_idx=1:length(alphasizes)
     alpha = alphasizes(alpha_idx);
    for city_idx = 1:length(city_sizes)
        city_size = city_sizes(city_idx);
        for rho_idx = 1:length(rhosizes)
            rhosize = rhosizes(rho_idx);
            coln = coln + 1;
        
            results = zeros(replication,parm); % Temporarily store results for each replication
        
            parfor i = 1:replication
            % Generate error terms for two city sizes
                [e_ij,omega_ij] = WE_alter(city_size, rhosize,"normal",5,0);
            %E2 = WE_null(city_size + 100, rhosize + 0.1);
            
                % Compute test statistics
                Jn=getsubset(city_size,alpha,r);
                [hatrho_J,hateta3_J,hateta3_full,var_source_Gamma1,var_source_Gamma2,var_source_Gamma3,jn,var_source_Gamma1_2,var_source_Gamma1_full] = eta5_estimator(e_ij,omega_ij,alpha,r,Jn)
                %[hatrho_J_full,hateta3_J_full,var_source_Gamma1_full,var_source_Gamma2_full,var_source_Gamma3_full,jn_full,var_source_Gamma1_2_full,var_source_Gamma1_3_full] = eta5_estimator_full(e_ij,omega_ij,alpha,3)
                Jn2=getsubset(city_size,alpha,4);
                [hateta3_wq,var_wq]=eta5_nondegen_concentration_test(city_size,e_ij);
                [hateta3_wq_J,var_wq_J]=incomplete_Us_NO_debias_standz(city_size,Jn2,e_ij,5);
                
                bound_1 = sqrt(log(city_size)/city_size);
                bound_2 = (log(city_size)/city_size);
            
                results(i, :) = [hateta3_wq_J,var_wq_J,hateta3_wq,var_wq,hatrho_J,hateta3_J,hateta3_full,var_source_Gamma1,var_source_Gamma2,var_source_Gamma3,city_size,rhosize,alpha,jn,var_source_Gamma1_2,var_source_Gamma1_full];
            end
            test_stat_1((coln-1)*replication+1:(coln)*replication,:)=results;
        
        end
    end
end

delete(gcp('nocreate')); % Shut down the parallel pool




T = array2table(test_stat_1, 'VariableNames', {'hateta3_wq_J','var_wq_J','hateta3_wq','var_wq','hatrho_J','hateta3_J','hateta3_full','var_source_Gamma1', 'var_source_Gamma2', 'var_source_Gamma3', 'n','rho','alpha','jn','var_source_Gamma1_2','var_source_Gamma1_full'});
writetable(T, "eta5_param_r3_normal_deg_null.csv", 'Delimiter', ';','WriteVariableNames', true);

