function [t_1,t_2,t_3, hat_eta2, sigma_square_21, n,Gamma_1,Gamma_2,Gamma_3,term_1,term_2,term_3,sigma_square_Gamma_2,sigma_square_Gamma_3,hat_rho] = eta2_estimator(e_ij_original,e_ij, omega_ij,rho)
    % Initialization
    n = size(e_ij, 1);
    xi_matr = e_ij;
    xi_matr(logical(eye(size(xi_matr)))) = NaN; % Set diagonal to NaN
    xi_vec = xi_matr(~isnan(xi_matr)); % Flatten and remove NaN
    hat_U_1_star=mean(xi_vec); % mue
    
    % Calculate a_2_clt and b_2_clt
    tmp_1=e_ij;
    tmp_2=e_ij;
    tmp_1_omega=omega_ij;
    tmp_2_omega=omega_ij;
    tmp_1(triu(true(size(tmp_1)))) = NaN;
    tmp_1=tmp_1.';% Upper triangle without diagonal
    tmp_2(tril(true(size(tmp_2)))) = NaN; % Lower triangle without diagonal
    a_2_clt = tmp_1(~isnan(tmp_1));
    b_2_clt = tmp_2(~isnan(tmp_2));
    tmp_1_omega(triu(true(size(tmp_1_omega)))) = NaN;
    tmp_1_omega=tmp_1_omega.';% Upper triangle without diagonal
    tmp_2_omega(tril(true(size(tmp_2_omega)))) = NaN;  % Lower triangle without diagonal
    a_2_clt_omega = tmp_1_omega(~isnan(tmp_1_omega));
    b_2_clt_omega = tmp_2_omega(~isnan(tmp_2_omega));
    hat_U_2_star=mean(a_2_clt .* b_2_clt);
    hat_U_2_star_square=mean((a_2_clt.^2 ).* (b_2_clt.^2));
    
    
    % Calculate the estimator
    hat_eta2_star = hat_U_2_star -hat_U_1_star^2;
    
    % Calculate hat_rho
    xi_matr_rho = omega_ij;
    xi_matr_rho(logical(eye(size(xi_matr_rho)))) = NaN; % Set diagonal to NaN
    xi_vec_rho = xi_matr_rho(~isnan(xi_matr_rho)); % Flatten and remove NaN
    hat_rho = mean(xi_vec_rho);
    hat_eta2 = max(0,hat_rho^(-2)) * hat_eta2_star;
    %original
    tmp_1_o=e_ij_original;
    tmp_2_o=e_ij_original;
    tmp_1_o(triu(true(size(tmp_1_o)))) = NaN;
    tmp_1_o=tmp_1_o.';% Upper triangle without diagonal
    tmp_2_o(tril(true(size(tmp_2_o)))) = NaN; % Lower triangle without diagonal
    a_2_clt_o = tmp_1(~isnan(tmp_1_o));
    b_2_clt_o = tmp_2(~isnan(tmp_2_o));
    
    
    % get variance estimation
    zero_dig = e_ij;
    zero_dig(logical(eye(size(zero_dig)))) = 0; % Set diagonal to 0
    zero_dig_omega = omega_ij;
    zero_dig_omega(logical(eye(size(zero_dig_omega)))) = 0; % Set diagonal to 0
    
    
    hat_a_1i_star = nan(n, 1);
    hat_a_1i_rho = nan(n, 1);
    for i = 1:n
        hat_a_1i_star(i) = (sum(zero_dig(i,:) + zero_dig(:,i)') / (n-1)) / 2;
        hat_a_1i_rho(i) = (sum(zero_dig_omega(i,:) + zero_dig_omega(:,i)') / (n-1))/2;
    end
    hat_g11 = hat_a_1i_star - hat_U_1_star;
    
    hat_g_11_rho = hat_a_1i_rho - hat_rho;
   
    
    hat_a_2i_star = nan(n, 1);
    hat_a_2i_star_square = nan(n, 1);
    for i = 1:n
        hat_a_2i_star(i) = sum(zero_dig(i,:) .* zero_dig(:,i)') / (n-1);
        hat_a_2i_star_square(i) = sum(zero_dig(i,:).^(2) .* (zero_dig(:,i).^2)') / (n-1);
    end
    hat_g21 = hat_a_2i_star - hat_U_2_star;
    
    sigma_square_21 = max(0,hat_rho^(-4)) * mean((2*hat_g21 - 4*mean(xi_vec)*hat_g11).^2)/n;
    sigma_square_Gamma_2 =hat_U_2_star/(n*(n-1)/2);
    %max(0,hat_rho^(-4)) * mean((2*hat_g21 - 4*mean(xi_vec)*hat_g11).^2)+4/((n-1))*max(0,hat_rho^(-5))*(1-max(0,hat_rho))*hat_eta2_star^(2);
    % max(0,hat_rho^(-4))* mean(  (a_2_clt).^2 .* b_2_clt_omega+ (b_2_clt).^2 .* a_2_clt_omega)/(n*(n-1)/2);
    sigma_square_Gamma_3 =max(0,hat_rho^(-6))*hat_eta2_star^2*hat_rho/(n*(n-1)/2);
    % max(0,hat_rho^(-4)) * mean((2*hat_g21 - 4*mean(xi_vec)*hat_g11).^2)+hat_U_2_star_square*(1-max(0,hat_rho))^2*max(0,hat_rho^(-4))/((n-1)/2)+4/((n-1))*max(0,hat_rho^(-5))*(1-max(0,hat_rho))*hat_eta2_star^(2);
    %max(0,hat_rho^(-4))* mean(a_2_clt_omega.* b_2_clt_omega)/(n*(n-1)/2);
    % get useful term
    term_1= max(0,hat_rho^(-4)) * var((2*hat_g21 - 4*mean(xi_vec)*hat_g11))/n;
    term_2=max(0,hat_rho^(-4)) * var(a_2_clt .* b_2_clt-a_2_clt_o .* b_2_clt_o.*rho^2)/(n*(n-1)/2);
    %mean(2*hat_g21 - 4*mean(xi_vec)*hat_g11);
    term_3=4*max(0,hat_rho^(-2))* hat_eta2^2 * var(xi_vec_rho-rho)/(n*(n-1)/2);
    %mean(4*max(0,hat_rho^(-1)) * hat_eta2_star * hat_g_11_rho);
    Gamma_1=  max(0,hat_rho^(-4)) *mean((2*hat_g21 - 4*mean(xi_vec)*hat_g11).^2)/n;%-  2*max(0,hat_rho^(-1)) * hat_eta2_star * hat_g_11_rho);
    Gamma_2=hat_U_2_star_square*(1-max(0,hat_rho))^2*max(0,hat_rho^(-4))/(n*(n-1)/2); %-2* max(0,hat_rho^(-3))*hat_eta2_star*mean(hat_g_11_rho);%mean(a_2_clt .* (b_2_clt-hat_U_1_star)+b_2_clt .* (a_2_clt-hat_U_1_star));
    Gamma_3=2/(n*(n-1))*max(0,hat_rho^(-1))*(1-max(0,hat_rho))*hat_eta2^(2);%mean( (b_2_clt - hat_U_1_star).* (a_2_clt - hat_U_1_star));
    % Test Statistic
    %t = hat_eta2 / sqrt(sigma_square_21 / n);
    t_1= max(0,hat_rho^(-2)) * mean((2*hat_g21 - 4*mean(xi_vec)*hat_g11));
    t_2=max(0,hat_rho^(-2)) * mean(a_2_clt .* b_2_clt-a_2_clt_o .* b_2_clt_o.*rho^2);
    t_3=2*max(0,hat_rho^(-1))* hat_eta2 * mean(xi_vec_rho-rho);

end
