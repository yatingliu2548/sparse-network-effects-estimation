function result = compute_expression(A,B)
    n = size(A, 1);
    if n < 3
        error('Matrix must be at least 3x3');
    end
    
    % Create matrices I, J, K such that I, J, K contain indices
    [I, J, K] = ndgrid(1:n, 1:n, 1:n);

    % Mask to select only elements with I < J < K
    mask = I <J & J < K;

    % Compute the product of A elements corresponding to the indices I, J, K
    product = A(sub2ind(size(A), I(mask), J(mask))) .* ...
              B(sub2ind(size(A), I(mask), K(mask))) +...
              A(sub2ind(size(A), J(mask), I(mask))) .* ...
              B(sub2ind(size(A), J(mask), K(mask))) + ...
              A(sub2ind(size(A), K(mask), I(mask))) .* ...
              B(sub2ind(size(A), K(mask), J(mask)))+ ...
              B(sub2ind(size(A), I(mask), J(mask))) .* ...
              A(sub2ind(size(A), I(mask), K(mask))) +...
              B(sub2ind(size(A), J(mask), I(mask))) .* ...
              A(sub2ind(size(A), J(mask), K(mask))) + ...
              B(sub2ind(size(A), K(mask), I(mask))) .* ...
              A(sub2ind(size(A), K(mask), J(mask)));

    % Sum all the valid products
    sum_value = sum(product);

    % Calculate the denominator
    denominator = n*(n-1)*(n-2)/2;
    
    % Compute the result
    result = sum_value / denominator;
end

